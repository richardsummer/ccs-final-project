{"version":3,"sources":["components/Hottakes/Form.js","components/Register/index.js","components/Login/index.js","components/About/index.js","components/Nav/index.js","components/Hottakes/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["Form","props","state","image","preview","title","text","isEditing","createPost","bind","handleChange","updatePost","removePost","handleImage","evt","file","target","files","this","setState","reader","FileReader","onloadend","result","readAsDataURL","name","value","preventDefault","fetch","method","headers","Cookies","get","body","JSON","stringify","then","response","json","data","console","log","catch","error","id","match","params","onSubmit","className","htmlFor","onChange","rows","cols","type","Fragment","onClick","Component","Register","username","email","password1","password2","handleSubmit","key","set","localStorage","setItem","user","handleAuth","isAuth","e","data-test","dismissError","required","to","Login","logout","password","About","TopNav","useState","collapsed","setCollapsed","Navbar","color","light","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","handleLogout","Hottake","hottake","Hottakes","hottakes","length","fetchHottakes","map","App","event","options","detail","remove","removeItem","history","push","path","component","render","React","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25dfab52.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n      preview: '',\n      title: '',\n      text: '',\n      isEditing: false,\n    }\n\n    this.createPost = this.createPost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.removePost = this.removePost.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n  }\n\n  handleImage(evt) {\n    let file = evt.target.files[0];\n    this.setState({image: file});\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({preview: reader.result})\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n\n  createPost(evt) {\n    evt.preventDefault();\n\n    fetch('/api/v1/hottakes/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        text: this.state.text,\n        image: this.state.image,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  updatePost(evt) {\n    evt.preventDefault();\n    const id = this.props.match.params.id;\n    fetch(`/api/v1/hottakes/${id}/` ,{\n      method: 'PUT',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({title: this.state.title, text: this.state.text}),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  removePost(){\n    const id = this.props.match.params.id;\n    fetch(`/api/v1/hottakes/${id}/` ,{\n      method: 'DELETE',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if(id){\n      fetch(`/api/v1/hottakes/${id}`)\n        .then(response => response.json())\n        .then(data => this.setState({...data, isEditing: true}));\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.state.isEditing ? this.updatePost : this.createPost} className=\"col-md-10\">\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title for the Post:</label>\n          <input id=\"title\" name=\"title\" value={this.state.title}  onChange={this.handleChange}/>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"text\">Content:</label>\n          <textarea id=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange} className=\"form-control\" rows=\"7\"cols=\"25\"></textarea>\n        </div>\n\n        <input type=\"file\" name=\"image\" onChange={this.handleImage}/>\n\n        {this.state.isEditing\n          ?\n          <React.Fragment>\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            <button type=\"button\" onClick={this.removePost} className=\"btn btn-primary\">Delete</button>\n          </React.Fragment>\n          :\n          <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        }\n\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    fetch('api/v1/rest-auth/registration/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), // => 'value'\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.key) {\n          Cookies.set('Authorization', `Token ${data.key}`);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          this.props.handleAuth({isAuth: true});\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  handleChange(e) {\n      this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>✖</button>\n              {this.state.error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n\n          <label>Email</label>\n          <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n\n          <label>Password1</label>\n          <input type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleChange} required />\n\n          <label>Password2</label>\n          <input type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleChange} required />\n          <input type=\"submit\" value=\"Register\" />\n        </form>\n\n        <div className=\"d-flex align-items-baseline\">\n          <p className=\"ml-auto\">Already have an account? <NavLink to=\"/login\">Login</NavLink>.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n\n      password: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    fetch('api/v1/rest-auth/login/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.key) {\n          Cookies.set('Authorization', `Token ${data.key}`);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          this.props.handleAuth({isAuth: true});\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  logout = () => {\n    // Cookies.remove('id', 'name', 'email');\n    // window.localStorage.clear();\n    // window.location.href = \"http://127.0.0.1:3000/\"\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>✖</button>\n              {this.state.error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n\n          <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\n        </form>\n        <div className=\"d-flex align-items-baseline\">\n          <p className=\"ml-auto\">Don't have an account? <NavLink to=\"/register\">Register</NavLink>.</p>\n        </div>\n      </div>\n        //----------------//\n      // </form\n      //   <div className=\"form-group\">\n      //     <label htmlFor=\"exampleInputEmail1\">Username</label>\n      //     <input type=\"text\" className=\"form-control\" name=\"username\" value={this.state.username} onChange={this.handleChange} aria-describedby=\"emailHelp\" placeholder=\"Enter Username\" required />\n      //     <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\n      //   </div>\n      //   <div className=\"form-group\">\n      //     <label htmlFor=\"exampleInputPassword1\">Password</label>\n      //     <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Password\" required />\n      //   </div>\n      //   <div className=\"form-group form-check\">\n      //   </div>\n      //   <input type=\"submit\" className=\"btn btn-primary\" value=\"Log In\" data-test=\"submit\">Submit</input>\n      //   <p className=\"ml-auto\">Don't have an account? <NavLink to=\"/register\">Register</NavLink>.</p>\n      // </form>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n      <h1>About Page</h1>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst TopNav = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div className=\"top-nav\">\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">4 Verticals Podcast</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n              <NavLink href=\"/hottakes/\">Hot Takes</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/episodes/\">Episodes</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/about/\">About</NavLink>\n            </NavItem>\n            {props.isAuth\n              ? <button onClick={props.handleLogout}>Logout</button>\n              :\n              <NavLink href=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\n            }\n              <NavLink href=\"/hottakes/new\" className=\"nav-item nav-link\">New Post</NavLink>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default TopNav;\n\n// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n//\n// function Nav(props) {\n//   return (\n//     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n//       <NavLink to=\"/home\" className=\"navbar-brand\">4 Verticals Podcast</NavLink>\n//       <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n//         <span className=\"navbar-toggler-icon\"></span>\n//       </button>\n//       <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n//         <div className=\"navbar-nav\">\n//           <NavLink to=\"/home\" className=\"nav-item nav-link\">Home <span className=\"sr-only\">(current)</span></NavLink>\n//           <NavLink to=\"/about\" className=\"nav-item nav-link\">About</NavLink>\n//           <NavLink to=\"/hottakes\" className=\"nav-item nav-link\">Hot Takes</NavLink>\n//           <NavLink to=\"/episodes\" className=\"nav-item nav-link\">Episodes</NavLink>\n//           {props.isAuth\n//           ? <button onClick={props.handleLogout}>Logout</button>\n//           :\n//           <NavLink to=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\n//         }\n//           <NavLink to=\"/hottakes/new\" className=\"nav-item nav-link\">New Post</NavLink>\n//         </div>\n//       </div>\n//     </nav>\n//   );\n// }\n//\n// export default Nav;\n","import React, {Component} from 'react';\n\n\n\nclass Hottake extends Component {\n  render() {\n    return(\n      <div>{this.props.hottake.text}</div>\n    )\n  }\n}\n\nclass Hottakes extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hottakes: [],\n    }\n  }\n\n  componentDidMount() {\n    if(!this.props.hottakes.length) {\n      this.props.fetchHottakes()\n    }\n  }\n\n  render() {\n    const hottakes = this.props.hottakes.map(hottake => <Hottake key={hottake.id} hottake={hottake} />)\n    return(\n      <React.Fragment>\n        {hottakes}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Hottakes;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from './../Hottakes/Form.js';\nimport Register from './../Register';\nimport Login from './../Login';\nimport About from './../About';\nimport Nav from './../Nav';\nimport Hottakes from './../Hottakes';\n\nimport Cookies from 'js-cookie';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isAuth: !!Cookies.get('Authorization'),\n      hottakes: [],\n      title: '',\n      text: '',\n    }\n\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchHottakes = this.fetchHottakes.bind(this);\n  }\n\n  fetchHottakes() {\n    fetch('/api/v1/hottakes/')\n      .then(response => response.json())\n      .then(data => this.setState({hottakes: data}));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.text}),\n    }\n\n    fetch(`api/v1/hottakes/new/`, options)\n      .then(response => response.json())\n      .then(data => this.setState({hottakes: [data, ...this.state.hottakes], text: ''}));\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleAuth(isAuth) {\n    // isAuth is an object, e.g. {isAuth: true}\n    this.setState(isAuth)\n  }\n\n  handleLogout() {\n    console.log('here');\n    fetch('api/v1/rest-auth/logout/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.detail === \"Successfully logged out.\") {\n          console.log('firing')\n          Cookies.remove('Authorization');\n          localStorage.removeItem('user');\n          this.setState({isAuth: false});\n          this.props.history.push('/login');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  render() {\n\n    return (\n        <React.Fragment>\n          <Nav isAuth={this.state.isAuth} handleLogout={this.handleLogout}/>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path='/register' component={Register} />\n            <Route path='/register' render={(props) => <Register {...props} isAuth={this.state.isAuth} handleAuth={ this.handleAuth } />} />\n            <Route path='/login' render={(props) => <Login {...props} isAuth={this.state.isAuth} handleAuth={ this.handleAuth } />} />\n            <Route path='/hottakes/new' component={Form} />\n            <Route path='/hottakes/edit/:id' component={Form} />\n            <Route path='/hottakes' render={(props) => <Hottakes {...props} hottakes={this.state.hottakes} fetchHottakes={this.fetchHottakes} />} />\n            <Route path='/about' render={About} />\n          </Switch>\n\n        </React.Fragment>\n\n    );\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}