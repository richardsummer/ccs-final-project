{"version":3,"sources":["components/Hottakes/Form.js","components/Register/index.js","components/Login/index.js","components/Episodes/index.js","components/About/index.js","components/Nav/index.js","components/Hottakes/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["Form","props","state","image","preview","title","text","isEditing","createPost","bind","handleChange","updatePost","removePost","handleImage","evt","file","target","files","this","setState","reader","FileReader","onloadend","result","readAsDataURL","name","value","preventDefault","fetch","method","headers","Cookies","get","body","JSON","stringify","then","response","json","data","console","log","catch","error","id","match","params","onSubmit","className","htmlFor","onChange","rows","cols","type","Fragment","onClick","Component","Register","username","email","password1","password2","handleSubmit","key","set","localStorage","setItem","user","handleAuth","isAuth","e","data-test","dismissError","required","to","Login","logout","password","Episodes","episodes","currently_playing","notes","fetchNotes","selectEpisode","items","episode","fetchNote","episodesHTML","filter","map","ListGroup","Item","note","width","src","height","frameborder","allowtransparency","allow","Card","About","style","Img","variant","Body","Title","Text","Button","TopNav","useState","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","handleLogout","divider","Hottake","hottake","Subtitle","Link","Hottakes","hottakes","length","fetchHottakes","CardColumns","App","event","options","detail","remove","removeItem","history","push","path","render","component","class","React","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.832f25e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nclass Form extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n      preview: '',\n      title: '',\n      text: '',\n      isEditing: false,\n    }\n\n    this.createPost = this.createPost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updatePost = this.updatePost.bind(this);\n    this.removePost = this.removePost.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n  }\n\n  handleImage(evt) {\n    let file = evt.target.files[0];\n    this.setState({image: file});\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({preview: reader.result})\n    }\n\n    reader.readAsDataURL(file);\n  }\n\n  handleChange(evt) {\n    this.setState({[evt.target.name]: evt.target.value})\n  }\n\n  createPost(evt) {\n    evt.preventDefault();\n\n    fetch('/api/v1/hottakes/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title: this.state.title,\n        text: this.state.text,\n        image: this.state.image,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  updatePost(evt) {\n    evt.preventDefault();\n    const id = this.props.match.params.id;\n    fetch(`/api/v1/hottakes/${id}/` ,{\n      method: 'PUT',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({title: this.state.title, text: this.state.text}),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  removePost(){\n    const id = this.props.match.params.id;\n    fetch(`/api/v1/hottakes/${id}/` ,{\n      method: 'DELETE',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if(id){\n      fetch(`/api/v1/hottakes/${id}`)\n        .then(response => response.json())\n        .then(data => this.setState({...data, isEditing: true}));\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.state.isEditing ? this.updatePost : this.createPost} className=\"col-md-10\">\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title for the Post:</label>\n          <input id=\"title\" name=\"title\" value={this.state.title}  onChange={this.handleChange}/>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"text\">Content:</label>\n          <textarea id=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange} className=\"form-control\" rows=\"7\"cols=\"25\"></textarea>\n        </div>\n\n        <input type=\"file\" name=\"image\" onChange={this.handleImage}/>\n\n        {this.state.isEditing\n          ?\n          <React.Fragment>\n            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n            <button type=\"button\" onClick={this.removePost} className=\"btn btn-primary\">Delete</button>\n          </React.Fragment>\n          :\n          <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        }\n\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    fetch('api/v1/rest-auth/registration/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'), // => 'value'\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.key) {\n          Cookies.set('Authorization', `Token ${data.key}`);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          this.props.handleAuth({isAuth: true});\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  handleChange(e) {\n      this.setState({[e.target.name]: e.target.value});\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>✖</button>\n              {this.state.error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n\n          <label>Email</label>\n          <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n\n          <label>Password1</label>\n          <input type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleChange} required />\n\n          <label>Password2</label>\n          <input type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleChange} required />\n          <input type=\"submit\" value=\"Register\" />\n        </form>\n\n        <div className=\"d-flex align-items-baseline\">\n          <p className=\"ml-auto\">Already have an account? <NavLink to=\"/login\">Login</NavLink>.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport {NavLink} from 'react-router-dom';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n\n      password: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n\n    fetch('api/v1/rest-auth/login/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.key) {\n          Cookies.set('Authorization', `Token ${data.key}`);\n          localStorage.setItem('user', JSON.stringify(data.user));\n          this.props.handleAuth({isAuth: true});\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  logout = () => {\n    // Cookies.remove('id', 'name', 'email');\n    // window.localStorage.clear();\n    // window.location.href = \"http://127.0.0.1:3000/\"\n  }\n\n  render() {\n    // NOTE: I use data-attributes for easier E2E testing\n    // but you don't need to target those (any css-selector will work)\n\n    return (\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          {\n            this.state.error &&\n            <h3 data-test=\"error\" onClick={this.dismissError}>\n              <button onClick={this.dismissError}>✖</button>\n              {this.state.error}\n            </h3>\n          }\n          <label>User Name</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n\n          <label>Password</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n\n          <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\n        </form>\n        <div className=\"d-flex align-items-baseline\">\n          <p className=\"ml-auto\">Don't have an account? <NavLink to=\"/register\">Register</NavLink>.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Card, ListGroup } from 'react-bootstrap';\n\n// class EpisodeList extends Component {\n//   render () {\n//     return (\n//       <Card style={{ width: '18rem' }}>\n//         <ListGroup variant=\"flush\">\n//           <ListGroup.Item>{this.props.episode.name}</ListGroup.Item>\n//         </ListGroup>\n//       </Card>\n//     )\n//   }\n// }\n\nclass Episodes extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: [],\n      currently_playing: '',\n      notes: [],\n    }\n\n    this.fetchNotes = this.fetchNotes.bind(this);\n    this.selectEpisode = this.selectEpisode.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/v1/spotify_show_episodes/');\n    const data = await response.json();\n    console.log(data);\n    this.setState({episodes: data.items, currently_playing: data.items[0].id});\n    console.log('currently_playing', data.items[0].id);\n    this.fetchNotes();\n  }\n\n  async selectEpisode(episode) {\n    await this.setState({episode});\n    this.fetchNote();\n  }\n\n  async fetchNotes() {\n    const response = await fetch(`/api/v1/episodes/${this.state.currently_playing}/notes/`);\n    const data = await response.json();\n    this.setState({notes: data});\n  }\n\n\n\n  render() {\n    const episodes = this.state.episodes.filter(episode => episode.id !== this.state.currently_playing);\n    const episodesHTML = episodes.map(episode => <ListGroup.Item key={episode.id}>{episode.name}</ListGroup.Item>)\n    const notes = this.state.notes.map(note => <div key={note.id}>{note.text}</div>);\n\n    return(\n      <React.Fragment>\n        <div className=\"container pt-5\" width=\"100%\">\n          <div className=\"row\">\n            <iframe src={`https://open.spotify.com/embed-podcast/episode/${this.state.currently_playing}`} title=\"player\" width=\"100%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <Card>\n                <ListGroup.Item className=\"list-items\">\n                  {episodesHTML}\n                </ListGroup.Item>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n}\n\n\n\nexport default Episodes;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction About() {\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src=\"./rich.jpg/100px180\" />\n      <Card.Body>\n        <Card.Title>Card Title</Card.Title>\n        <Card.Text>\n          Some quick example text to build on the card title and make up the bulk of\n          the card's content.\n        </Card.Text>\n        <Button variant=\"primary\">Go somewhere</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default About;\n","import React, { useState } from 'react';\n// import { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport { FaFacebook } from \"react-icons/fa\";\nimport { BsPeopleCircle } from \"react-icons/bs\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n\n} from 'reactstrap';\n\nconst TopNav = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  //\n  // const [collapsed, setCollapsed] = useState(true);\n  //\n  // const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar className=\"top-nav\" dark expand=\"md\">\n        <NavbarBrand href=\"/\">4 VERTICALS</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Episodes</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink href=\"/hottakes/\">Hot Takes</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/about/\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/hottakes/new\" className=\"nav-item nav-link\">New Post</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/notes/new/\" className=\"nav-item nav-link\">New Note</NavLink>\n            </NavItem>\n          </Nav>\n          <UncontrolledDropdown nav inNavbar>\n            <DropdownToggle nav caret>\n              <BsPeopleCircle id=\"profile-icon\" width=\"150%\"/>\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem>\n              {props.isAuth\n                ? <button onClick={props.handleLogout}>Logout</button>\n                :\n                <NavLink href=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\n              }\n              </DropdownItem>\n              <DropdownItem>\n                <NavLink href=\"/register\" className=\"nav-item nav-link\">Register</NavLink>\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>\n                Reset\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n    </div>\n    // Import these.\n    // UncontrolledDropdown,\n    // DropdownToggle,\n    // DropdownMenu,\n    // DropdownItem,\n    // NavbarText\n\n    // <NavbarText>Simple Text</NavbarText>\n    // <UncontrolledDropdown nav inNavbar>\n    //   <DropdownToggle nav caret>\n    //     Options\n    //   </DropdownToggle>\n    //   <DropdownMenu right>\n    //     <DropdownItem>\n    //       Option 1\n    //     </DropdownItem>\n    //     <DropdownItem>\n    //       Option 2\n    //     </DropdownItem>\n    //     <DropdownItem divider />\n    //     <DropdownItem>\n    //       Reset\n    //     </DropdownItem>\n    //   </DropdownMenu>\n    // </UncontrolledDropdown>\n\n    //_________________________//\n\n    // <div className=\"top-nav\">\n    //   <Navbar color=\"faded\" dark>\n    //     <NavbarBrand href=\"/\" className=\"mr-auto\">4 Verticals Podcast</NavbarBrand>\n    //     <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n    //     <Collapse isOpen={!collapsed} navbar>\n    //       <Nav navbar>\n    //         <NavItem>\n    //         <NavItem>\n    //           <NavLink href=\"/\">Episodes</NavLink>\n    //         </NavItem>\n    //             <NavLink href=\"/hottakes/\">Hot Takes</NavLink>\n    //         </NavItem>\n    //         <NavItem>\n    //           <NavLink href=\"/about/\">About</NavLink>\n    //         </NavItem>\n    //         {props.isAuth\n    //           ? <button onClick={props.handleLogout}>Logout</button>\n    //           :\n    //           <NavLink href=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\n    //         }\n    //           <NavLink href=\"/hottakes/new\" className=\"nav-item nav-link\">New Post</NavLink>\n    //           <NavLink href=\"/notes/new/\" className=\"nav-item nav-link\">New Note</NavLink>\n    //       </Nav>\n    //     </Collapse>\n    //   </Navbar>\n    // </div>\n  );\n}\n\nexport default TopNav;\n","import React, {Component} from 'react';\n\nimport { Card, CardColumns } from 'react-bootstrap';\n\n\n\nclass Hottake extends Component {\n  render() {\n    return(\n      <Card style={{ width: '22rem' }}>\n        <Card.Body>\n          <Card.Title>{this.props.hottake.title}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\n          <Card.Text>\n            {this.props.hottake.text}\n          </Card.Text>\n          <Card.Link href=\"#\">Read More</Card.Link>\n        </Card.Body>\n      </Card>\n      // <li>{this.props.hottake.image}{this.props.hottake.title}{this.props.hottake.text}</li>\n    )\n  }\n}\n\nclass Hottakes extends Component {\n\n\n  componentDidMount() {\n    if(!this.props.hottakes.length) {\n      this.props.fetchHottakes();\n    }\n  }\n\n  render() {\n    const hottakes = this.props.hottakes.map(hottake => <Hottake key={hottake.id} hottake={hottake} />)\n\n    return(\n      <div className=\"container mt-5\">\n        <CardColumns>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              {hottakes}\n            </div>\n          </div>\n        </CardColumns>\n      </div>\n    )\n  }\n}\n\nexport default Hottakes;\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Form from './../Hottakes/Form.js';\nimport Register from './../Register';\nimport Login from './../Login';\nimport Episodes from './../Episodes/';\nimport About from './../About';\nimport Nav from './../Nav';\nimport Hottakes from './../Hottakes';\nimport Cookies from 'js-cookie';\n\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      isAuth: !!Cookies.get('Authorization'),\n      hottakes: [],\n      title: '',\n      text: '',\n    }\n\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchHottakes = this.fetchHottakes.bind(this);\n  }\n\n  fetchHottakes() {\n    fetch('/api/v1/hottakes/')\n      .then(response => response.json())\n      .then(data => this.setState({hottakes: data}));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({text: this.state.text}),\n    }\n\n    fetch(`api/v1/hottakes/new/`, options)\n      .then(response => response.json())\n      .then(data => this.setState({hottakes: [data, ...this.state.hottakes], text: ''}));\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleAuth(isAuth) {\n    // isAuth is an object, e.g. {isAuth: true}\n    this.setState(isAuth)\n  }\n\n  handleLogout() {\n    console.log('here');\n    fetch('api/v1/rest-auth/logout/' ,{\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data.detail === \"Successfully logged out.\") {\n          console.log('firing')\n          Cookies.remove('Authorization');\n          localStorage.removeItem('user');\n          this.setState({isAuth: false});\n          this.props.history.push('/login');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n\n    return this.setState({ error: '' });\n  }\n\n  render() {\n\n    return (\n        <React.Fragment>\n          <div className=\"top-line\">\n          </div>\n          <Nav isAuth={this.state.isAuth} handleLogout={this.handleLogout}/>\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path='/register' render={(props) => <Register {...props} isAuth={this.state.isAuth} handleAuth={ this.handleAuth } />} />\n            <Route path='/login' render={(props) => <Login {...props} isAuth={this.state.isAuth} handleAuth={ this.handleAuth } />} />\n            <Route path='/notes/new' />\n            <Route path='/hottakes/new' component={Form} />\n            <Route path='/hottakes/edit/:id' component={Form} />\n            <Route path='/hottakes' render={(props) => <Hottakes {...props} hottakes={this.state.hottakes} fetchHottakes={this.fetchHottakes} />} />\n            <Route path='/about' component={About} />\n            <Route path='/' component={Episodes} />\n          </Switch>\n          <footer className=\"page-footer font-small unique-color-dark pt-4 mt-5\">\n            <div class=\"container\">\n\n              <ul className=\"list-unstyled list-inline text-center py-2\">\n\n              </ul>\n\n\n            </div>\n\n            <div class=\"footer-copyright text-center py-3\">© 2020 Copyright, 4 Verticals\n            </div>\n          </footer>\n        </React.Fragment>\n\n    );\n  }\n}\n\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}